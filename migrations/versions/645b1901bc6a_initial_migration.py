"""initial_migration

Revision ID: 645b1901bc6a
Revises: 
Create Date: 2025-09-24 14:05:57.463484

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '645b1901bc6a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_pages')
    op.drop_table('messages')
    op.drop_table('PaySlipData')
    op.drop_table('Schedule')
    op.drop_table('Teams')
    op.drop_index(op.f('Employee_email_key'), table_name='Employee')
    op.drop_index(op.f('Employee_phone_key'), table_name='Employee')
    op.drop_index(op.f('Employee_userID_key'), table_name='Employee')
    op.drop_table('Employee')
    op.drop_table('Request')
    op.drop_table('TeamMessage')
    op.drop_table('TeamTask')
    op.drop_table('documents')
    op.drop_table('Message')
    op.drop_table('PaySlip')
    op.drop_table('errors')
    op.drop_index(op.f('idx_items_posted'), table_name='items')
    op.drop_table('items')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('source', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('published_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('posted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('items_pkey')),
    sa.UniqueConstraint('hash', name=op.f('items_hash_key'))
    )
    op.create_index(op.f('idx_items_posted'), 'items', ['posted'], unique=False)
    op.create_table('errors',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('when_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('component', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('errors_pkey'))
    )
    op.create_table('PaySlip',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('employeeID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('month', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('localFile', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employeeID'], ['Employee.id'], name=op.f('PaySlip_employeeID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('PaySlip_pkey'))
    )
    op.create_table('Message',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('fromID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('toID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['fromID'], ['Employee.id'], name=op.f('Message_fromID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['toID'], ['Employee.id'], name=op.f('Message_toID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('Message_pkey'))
    )
    op.create_table('documents',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_processed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='documents_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('TeamTask',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('teamID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('task', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('done', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('deadline', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['teamID'], ['Teams.id'], name=op.f('TeamTask_teamID_fkey'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('TeamTask_pkey'))
    )
    op.create_table('TeamMessage',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('fromID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('toID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['fromID'], ['Employee.id'], name=op.f('TeamMessage_fromID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['toID'], ['Teams.id'], name=op.f('TeamMessage_toID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('TeamMessage_pkey'))
    )
    op.create_table('Request',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('employeeID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('Documents', 'Vacation', 'Leave', 'Training', 'Raise', 'Department', 'Other', 'Sick', name='RequestType'), autoincrement=False, nullable=False),
    sa.Column('approved', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employeeID'], ['Employee.id'], name=op.f('Request_employeeID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('Request_pkey'))
    )
    op.create_table('Employee',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('userID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('firstName', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('lastName', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('Admin', 'Employee', 'Manager', name='CompanyRole'), server_default=sa.text('\'Employee\'::"CompanyRole"'), autoincrement=False, nullable=False),
    sa.Column('position', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('onBoarding', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('IBAN', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('photo', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('taxid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('insurance', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('teamsId', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['teamsId'], ['Teams.id'], name='Employee_teamsId_fkey', onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='Employee_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('Employee_userID_key'), 'Employee', ['userID'], unique=True)
    op.create_index(op.f('Employee_phone_key'), 'Employee', ['phone'], unique=True)
    op.create_index(op.f('Employee_email_key'), 'Employee', ['email'], unique=True)
    op.create_table('Teams',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('tasks', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Teams_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Schedule',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('employeeID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('timeIn', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('timeOut', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employeeID'], ['Employee.id'], name=op.f('Schedule_employeeID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('Schedule_pkey'))
    )
    op.create_table('PaySlipData',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('employeeID', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('deduction', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('IBAN', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('month', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(precision=3), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updatedAt', postgresql.TIMESTAMP(precision=3), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['employeeID'], ['Employee.id'], name=op.f('PaySlipData_employeeID_fkey'), onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('PaySlipData_pkey'))
    )
    op.create_table('messages',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_ai', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('messages_pkey'))
    )
    op.create_table('document_pages',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('document_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('page_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_processed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], name=op.f('document_pages_document_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('document_pages_pkey'))
    )
    # ### end Alembic commands ###
